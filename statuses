#!/bin/bash

cur=`pwd` 
echo saving directory $cur

GITREPOS=`find ~ -path "*/.local/share/Trash/*" -prune -or -name ".git" -printf '%h\n'`
HGREPOS=`find ~ -path "*/.local/share/Trash/*" -prune -or -name ".hg" -printf '%h\n'`


echo "Checking" 
echo "$GITREPOS"
echo "$HGREPOS"


#Git Repositories
#for i in ~/hobby-code/ ~/data ;
for i in $GITREPOS ;
do
  echo ---------$i------------
  if [[ -d $i ]] ; then
      cd $i
      if [[ -z $1 ]] ; then 
          git status
      elif [ $1 = 'gui' ] ;
      then
          git status
          unset modified
          eval `git status --porcelain | sed 's/.*/modified=yes/'`
          echo modified = $modified
          if [ "$modified" = 'yes' ] ;
          then
              git gui
          fi
      elif [ $1 = 'fetch' ] ;
      then
          git fetch
      elif [ $1 = 'pull' ] ;
      then
          git pull
      elif [ $1 = 'push' ] ;
      then
          git push
      else
          echo "unknown command $1"
      fi
  else
      echo --does not exist--
  fi
done


#Mercurial Repositories
#for i in ~/pyenv/src/ckan ~/pyenv/src/ckanext-admin ~/pyenv/src/ckanext-community;
for i in $HGREPOS ;
do
  echo ---------$i------------
  if [[ -d $i ]] ; then
      cd $i
      if [[ -z $1 ]] ; then 
          hg status
          hg incoming
          hg outgoing
      elif [ $1 = 'gui' ] ;
      then
          hg status
          unset modified
          eval `hg status | sed 's/.*/modified=yes/'`
          echo modified = $modified
          if [ "$modified" = 'yes' ] ;
          then
              hgtk commit
          fi
      elif [ $1 = 'fetch' ] ;
      then
          hg pull
      elif [ $1 = 'pull' ] ;
      then
          hg pull
          hg update
      elif [ $1 = 'push' ] ;
      then
          hg push
      else
          echo "unknown command $1"
      fi
  else
      echo --does not exist--
  fi
done

echo ---------------------
echo returning to $cur
cd $cur
